# -*- coding: utf-8 -*-
"""20/02

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1gVIWi3PTRsDyHiPiboeCp8GKfDA0-evD

#CORRELAÇÃO EXPORTAÇÃO E COMERCIALIZAÇÃO
"""

import pandas as pd

# Carregar os dois arquivos Excel
file1 = pd.read_excel('/content/exportacao.xlsx')
file2 = pd.read_excel('/content/comercializacao.xlsx')

# Exibir as primeiras linhas de ambos os arquivos para verificar
print(file1.head())
print(file2.head())

# Definindo os anos para selecionar as colunas
anos = [str(ano) for ano in range(1993, 2023)]

# Selecionando as colunas de interesse em cada arquivo
file1_anos = file1[['Sigla', 'Codigo', 'Município'] + anos]
file2_anos = file2[['Sigla', 'Codigo', 'Município'] + anos]

# Verificar as primeiras linhas para garantir que está correto
print(file1_anos.head())
print(file2_anos.head())

# Unir os arquivos com base no código do município
dados_combinados = pd.merge(file1_anos, file2_anos, on='Codigo', suffixes=('_file1', '_file2'))

# Verificar as primeiras linhas após o merge
print(dados_combinados.head())

# Inicializar um dicionário para armazenar as correlações
correlacoes = {}

# Calcular a correlação para cada ano
for ano in anos:
    coluna_file1 = f'{ano}_file1'
    coluna_file2 = f'{ano}_file2'
    correlacao = dados_combinados[coluna_file1].corr(dados_combinados[coluna_file2])
    correlacoes[ano] = correlacao

# Exibir as correlações para cada ano
print(correlacoes)

import matplotlib.pyplot as plt

# Criando o gráfico das correlações por ano
plt.figure(figsize=(12, 6))  # Aumenta o tamanho do gráfico
plt.plot(correlacoes.keys(), correlacoes.values(), marker='o', color='b')

# Ajustando o layout para melhor visualização
plt.title('Correlação entre os Exportação e Comercialização por ano')
plt.xlabel('Ano')
plt.ylabel('Correlação')
plt.xticks(rotation=45)  # Rotacionar os anos para evitar sobreposição
plt.grid(True)

# Exibir o gráfico com espaçamento adequado
plt.tight_layout()
plt.show()



"""#Correlação Exportação e Comercialização por Região"""

import pandas as pd

# Dicionário de mapeamento de siglas para regiões
regioes = {
    'Norte': ['AC', 'AP', 'AM', 'PA', 'RO', 'RR', 'TO'],
    'Nordeste': ['AL', 'BA', 'CE', 'MA', 'PB', 'PE', 'PI', 'RN', 'SE'],
    'Centro-Oeste': ['GO', 'MT', 'MS', 'DF'],
    'Sudeste': ['ES', 'MG', 'RJ', 'SP'],
    'Sul': ['PR', 'RS', 'SC']
}

# Função para mapear siglas para regiões
def mapear_regiao(sigla):
    for regiao, siglas in regioes.items():
        if sigla in siglas:
            return regiao
    return 'Desconhecido'

# Carregar os arquivos
comercializacao = pd.read_excel("comercializacao.xlsx")
exportacao = pd.read_excel("exportacao.xlsx")

# Verificar se a coluna 'Sigla' existe
if "Sigla" not in comercializacao.columns or "Sigla" not in exportacao.columns:
    raise ValueError("A coluna 'Sigla' não está presente em um dos arquivos.")

# Adicionar a coluna de Região
comercializacao["Região"] = comercializacao["Sigla"].apply(mapear_regiao)
exportacao["Região"] = exportacao["Sigla"].apply(mapear_regiao)

# Selecionar apenas colunas numéricas (evitar erros com colunas de texto)
comercializacao_numeric = comercializacao.select_dtypes(include=['int64', 'float64'])
exportacao_numeric = exportacao.select_dtypes(include=['int64', 'float64'])

# Identificar os anos que estão presentes em ambos os arquivos
anos_comuns = list(set(comercializacao_numeric.columns) & set(exportacao_numeric.columns))

# Criar um dicionário para armazenar as correlações por região e ano
correlacoes = {}

# Calcular correlação para cada região
for regiao in regioes.keys():
    df_com = comercializacao[comercializacao["Região"] == regiao][anos_comuns]
    df_exp = exportacao[exportacao["Região"] == regiao][anos_comuns]

    # Garantir que os DataFrames tenham dados suficientes e os mesmos índices
    if not df_com.empty and not df_exp.empty:
        df_com = df_com.sort_index()
        df_exp = df_exp.sort_index()

        # Alinhar os índices para evitar problemas de dimensão
        df_com, df_exp = df_com.align(df_exp, join="inner", axis=0)

        correlacao = df_com.corrwith(df_exp, axis=0)
        correlacoes[regiao] = correlacao

# Criar um DataFrame com as correlações
correlacao_regioes_df = pd.DataFrame(correlacoes)

# Ordenar os anos para exibição clara
correlacao_regioes_df = correlacao_regioes_df.sort_index()

# Exibir a tabela final de correlações
print(correlacao_regioes_df)

# Exibir a tabela de correlação
correlacao_regioes_df

"""#CORRELAÇÃO EXPORTAÇÃO E INVESTIMENTO"""

# Carregar o arquivo "exportação" e "investimento"
file_exportacao = pd.read_excel('/content/exportacao.xlsx')
file_investimento = pd.read_excel('/content/investimento.xlsx')

# Exibir as primeiras linhas de ambos para garantir que o carregamento foi feito corretamente
print(file_exportacao.head())
print(file_investimento.head())

# Selecionando as colunas relevantes para os dois arquivos
file_exportacao_anos = file_exportacao[['Sigla', 'Codigo', 'Município'] + anos]
file_investimento_anos = file_investimento[['Sigla', 'Codigo', 'Município'] + anos]

# Verificar as primeiras linhas para garantir que está correto
print(file_exportacao_anos.head())
print(file_investimento_anos.head())

# Unir os arquivos de "exportação" e "investimento" com base no código do município
dados_combinados_exportacao_investimento = pd.merge(file_exportacao_anos, file_investimento_anos, on='Codigo', suffixes=('_exportacao', '_investimento'))

# Verificar as primeiras linhas após o merge
print(dados_combinados_exportacao_investimento.head())

# Inicializar um dicionário para armazenar as correlações
correlacoes_exportacao_investimento = {}

# Calcular a correlação entre "exportação" e "investimento" para cada ano
for ano in anos:
    coluna_exportacao = f'{ano}_exportacao'
    coluna_investimento = f'{ano}_investimento'
    correlacao = dados_combinados_exportacao_investimento[coluna_exportacao].corr(dados_combinados_exportacao_investimento[coluna_investimento])
    correlacoes_exportacao_investimento[ano] = correlacao

# Exibir as correlações para cada ano
print(correlacoes_exportacao_investimento)

import matplotlib.pyplot as plt

# Criando o gráfico das correlações por ano
plt.figure(figsize=(10, 6))
plt.plot(correlacoes_exportacao_investimento.keys(), correlacoes_exportacao_investimento.values(), marker='o')

# Ajustando o layout
plt.title('Correlação entre Exportação e Investimento por Ano')
plt.xlabel('Ano')
plt.ylabel('Correlação')
plt.grid(True)
plt.xticks(rotation=45)  # Rotacionar os anos para evitar sobreposição

# Exibir o gráfico
plt.tight_layout()
plt.show()

"""#Correlação Exportação e Investimento por Região"""

import pandas as pd

# Criando o DataFrame com os dados fornecidos
dados_regioes = {
    'Ano': [1993, 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002, 2003, 2004, 2005, 2006, 2007, 2008, 2009, 2010, 2011, 2012, 2013, 2014, 2015, 2016, 2017, 2018, 2019, 2020, 2021, 2022],
    'Norte': [0.026214, 0.112172, 0.020047, 0.038601, 0.02402, 0.028683, 0.066903, -0.014135, 0.044713, 0.052096, 0.094988, 0.129415, 0.10958, 0.073359, 0.019039, 0.026924, 0.141832, 0.175461, 0.100466, 0.14983, 0.136619, 0.136445, 0.120836, 0.306713, 0.216638, 0.217287, 0.156612, 0.198937, 0.203525, 0.015483],
    'Nordeste': [0.111752, 0.047229, 0.263576, 0.272021, 0.339249, 0.401834, 0.224442, 0.0568, 0.034442, 0.089187, 0.086692, 0.11818, 0.1173, 0.131181, 0.100987, 0.108018, 0.186374, 0.151145, 0.153493, 0.143895, 0.197034, 0.161596, 0.144079, 0.188871, 0.191093, 0.251417, 0.16993, 0.136299, 0.175182, 0.026972],
    'Centro-Oeste': [-0.003235, -0.005017, 0.029991, 0.028437, 0.077592, 0.000386, -0.019981, 0.022436, 0.011191, -0.006665, 0.024277, 0.005618, -0.006993, -0.01008, 0.008333, -0.002177, 0.016775, 0.010049, 0.022186, -0.000953, -0.000563, 0.027078, 0.002324, -0.020868, 0.009405, 0.023658, 0.023642, 0.013466, -0.005762, -0.005715],
    'Sudeste': [-0.008116, 0.049636, -0.009535, 0.000202, -0.024268, -0.008974, -0.00568, -0.011171, 0.012908, 0.00708, 0.016994, 0.000253, -0.00749, -0.007066, -0.022767, -0.019141, -0.014396, -0.015705, -0.003132, -0.007152, -0.007632, -0.008061, -0.003348, -0.001583, 0.013926, 0.004404, -0.000218, -0.019222, 0.004193, 0.007887],
    'Sul': [-0.004117, 0.125301, 0.03985, 0.00485, 0.020866, -0.026271, -0.011868, -0.001321, -0.009217, -8e-05, -0.030351, -0.017731, -0.03537, -0.02119, -0.020788, -0.024378, -0.025814, -0.017817, -0.022039, 0.004585, -0.010342, -0.002674, 0.018559, -0.004059, 0.018191, 0.024242, 0.004257, -0.010148, -0.008702, -0.022933]
}

# Criando o DataFrame
df_regioes = pd.DataFrame(dados_regioes)

# Salvando o DataFrame como um arquivo CSV
df_regioes.to_csv('/content/dados_regioes.csv', index=False)

# Exibindo todos os anos no DataFrame
df_regioes

"""#CORRELAÇÃO EXPORTAÇÃO E CUSTEIO"""

# Carregar o arquivo "exportação" e "custeio"
file_custeio = pd.read_excel('/content/custeio.xlsx')
file_exportacao = pd.read_excel('/content/exportacao.xlsx')

# Exibir as primeiras linhas de ambos para garantir que o carregamento foi feito corretamente
print(file_custeio.head())
print(file_exportacao.head())

# Selecionando as colunas relevantes para os dois arquivos
file_exportacao_anos = file_exportacao[['Sigla', 'Codigo', 'Município'] + anos]
file_custeio_anos = file_custeio[['Sigla', 'Codigo', 'Município'] + anos]

# Verificar as primeiras linhas para garantir que está correto
print(file_exportacao_anos.head())
print(file_custeio_anos.head())

# Unir os arquivos de "exportação" e "custeio" com base no código do município
dados_combinados_exportacao_custeio = pd.merge(file_exportacao_anos, file_custeio_anos, on='Codigo', suffixes=('_exportacao', '_custeio'))

# Verificar as primeiras linhas após o merge
print(dados_combinados_exportacao_custeio.head())

# Inicializar um dicionário para armazenar as correlações
correlacoes_exportacao_custeio = {}

# Calcular a correlação entre "exportação" e "custeio" para cada ano
for ano in anos:
    coluna_exportacao = f'{ano}_exportacao'
    coluna_custeio = f'{ano}_custeio'
    correlacao = dados_combinados_exportacao_custeio[coluna_exportacao].corr(dados_combinados_exportacao_custeio[coluna_custeio])
    correlacoes_exportacao_custeio[ano] = correlacao

# Exibir as correlações para cada ano
print(correlacoes_exportacao_custeio)

import matplotlib.pyplot as plt

# Criando o gráfico das correlações por ano
plt.figure(figsize=(10, 6))
plt.plot(correlacoes_exportacao_custeio.keys(), correlacoes_exportacao_custeio.values(), marker='o')

# Ajustando o layout
plt.title('Correlação entre Exportação e Custeio por Ano')
plt.xlabel('Ano')
plt.ylabel('Correlação')
plt.grid(True)
plt.xticks(rotation=45)  # Rotacionar os anos para evitar sobreposição

# Exibir o gráfico
plt.tight_layout()
plt.show()

"""#CORRELAÇÃO EXPORTAÇÃO E CUSTEIO POR REGIAO"""

import pandas as pd

# Dicionário de mapeamento de siglas para regiões
regioes = {
    'Norte': ['AC', 'AP', 'AM', 'PA', 'RO', 'RR', 'TO'],
    'Nordeste': ['AL', 'BA', 'CE', 'MA', 'PB', 'PE', 'PI', 'RN', 'SE'],
    'Centro-Oeste': ['GO', 'MT', 'MS', 'DF'],
    'Sudeste': ['ES', 'MG', 'RJ', 'SP'],
    'Sul': ['PR', 'RS', 'SC']
}

# Função para mapear siglas para regiões
def mapear_regiao(sigla):
    for regiao, siglas in regioes.items():
        if sigla in siglas:
            return regiao
    return 'Desconhecido'

# Carregar os arquivos
file_exportacao = pd.read_excel('/content/exportacao.xlsx')
file_custeio = pd.read_excel('/content/custeio.xlsx')

# Adicionar a coluna de Região
file_exportacao["Região"] = file_exportacao["Sigla"].apply(mapear_regiao)
file_custeio["Região"] = file_custeio["Sigla"].apply(mapear_regiao)

# Selecionar apenas colunas numéricas (evitar erros com colunas de texto)
file_exportacao_numeric = file_exportacao.select_dtypes(include=['int64', 'float64'])
file_custeio_numeric = file_custeio.select_dtypes(include=['int64', 'float64'])

# Identificar os anos que estão presentes em ambos os arquivos
anos_comuns = list(set(file_exportacao_numeric.columns) & set(file_custeio_numeric.columns))

# Criar um dicionário para armazenar as correlações por região e ano
correlacoes_regiao_exportacao_custeio = {}

# Calcular correlação para cada região
for regiao in regioes.keys():
    df_exp = file_exportacao[file_exportacao["Região"] == regiao][anos_comuns]
    df_cust = file_custeio[file_custeio["Região"] == regiao][anos_comuns]

    # Garantir que os DataFrames tenham dados suficientes e os mesmos índices
    if not df_exp.empty and not df_cust.empty:
        df_exp = df_exp.sort_index()
        df_cust = df_cust.sort_index()

        # Alinhar os índices para evitar problemas de dimensão
        df_exp, df_cust = df_exp.align(df_cust, join="inner", axis=0)

        # Calcular a correlação para cada ano
        correlacao = df_exp.corrwith(df_cust, axis=0)
        correlacoes_regiao_exportacao_custeio[regiao] = correlacao

# Criar um DataFrame com as correlações por região
correlacao_regioes_df = pd.DataFrame(correlacoes_regiao_exportacao_custeio)

# Ordenar os anos para exibição clara
correlacao_regioes_df = correlacao_regioes_df.sort_index()

# Exibir a tabela final de correlações
print(correlacao_regioes_df)

"""#VISUALIZAÇÃO CORRELAÇÃO GERAL"""

import matplotlib.pyplot as plt

# Dados de correlação
anos = list(range(1993, 2023))

corr_export_comerc = [0.0850, 0.2819, 0.1484, 0.1466, 0.0993, 0.5413, 0.4943, 0.4453, 0.5404, 0.5804,
                      0.5283, 0.5019, 0.4033, 0.5868, 0.6007, 0.5827, 0.7896, 0.7337, 0.5496, 0.4191,
                      0.4812, 0.5410, 0.4249, 0.6261, 0.4679, 0.3823, 0.2747, 0.4002, 0.5059, 0.1955]

corr_export_inv = [0.1417, 0.3557, 0.2309, 0.2551, 0.2763, 0.2203, 0.2498, 0.3357, 0.3895, 0.4233,
                   0.3260, 0.2428, 0.4037, 0.2479, 0.3045, 0.3129, 0.2695, 0.2875, 0.4148, 0.4642,
                   0.4059, 0.3715, 0.4532, 0.2715, 0.3774, 0.3519, 0.4076, 0.3654, 0.1972, 0.1537]

corr_export_cust = [0.1507, 0.2829, 0.3208, 0.3695, 0.4319, 0.4535, 0.5145, 0.5243, 0.5048, 0.4436,
                    0.4556, 0.4976, 0.4182, 0.5407, 0.5598, 0.5646, 0.8074, 0.7258, 0.5099, 0.5321,
                    0.5153, 0.5350, 0.5969, 0.4407, 0.5805, 0.4848, 0.5075, 0.4779, 0.4635, 0.1806]

# Criar o gráfico
plt.figure(figsize=(12,6))
plt.plot(anos, corr_export_comerc, marker='o', linestyle='-', label='Exportação vs Comercialização', color='b')
plt.plot(anos, corr_export_inv, marker='s', linestyle='-', label='Exportação vs Investimento', color='g')
plt.plot(anos, corr_export_cust, marker='^', linestyle='-', label='Exportação vs Custeio', color='r')

# Adicionar título e legendas
plt.xlabel("Ano")
plt.ylabel("Coeficiente de Correlação")
plt.title("Correlação da Exportação com Comercialização, Investimento e Custeio (1993-2022)")
plt.legend()
plt.grid(True)
plt.show()